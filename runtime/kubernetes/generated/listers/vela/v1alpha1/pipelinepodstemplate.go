// Copyright (c) 2022 Target Brands, Inc. All rights reserved.
//
// Use of this source code is governed by the LICENSE file in this repository.

// Code generated by lister-gen. DO NOT EDIT.

package v1alpha1

import (
	v1alpha1 "github.com/go-vela/worker/runtime/kubernetes/apis/vela/v1alpha1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// PipelinePodsTemplateLister helps list PipelinePodsTemplates.
// All objects returned here must be treated as read-only.
type PipelinePodsTemplateLister interface {
	// List lists all PipelinePodsTemplates in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PipelinePodsTemplate, err error)
	// PipelinePodsTemplates returns an object that can list and get PipelinePodsTemplates.
	PipelinePodsTemplates(namespace string) PipelinePodsTemplateNamespaceLister
	PipelinePodsTemplateListerExpansion
}

// pipelinePodsTemplateLister implements the PipelinePodsTemplateLister interface.
type pipelinePodsTemplateLister struct {
	indexer cache.Indexer
}

// NewPipelinePodsTemplateLister returns a new PipelinePodsTemplateLister.
func NewPipelinePodsTemplateLister(indexer cache.Indexer) PipelinePodsTemplateLister {
	return &pipelinePodsTemplateLister{indexer: indexer}
}

// List lists all PipelinePodsTemplates in the indexer.
func (s *pipelinePodsTemplateLister) List(selector labels.Selector) (ret []*v1alpha1.PipelinePodsTemplate, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PipelinePodsTemplate))
	})
	return ret, err
}

// PipelinePodsTemplates returns an object that can list and get PipelinePodsTemplates.
func (s *pipelinePodsTemplateLister) PipelinePodsTemplates(namespace string) PipelinePodsTemplateNamespaceLister {
	return pipelinePodsTemplateNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// PipelinePodsTemplateNamespaceLister helps list and get PipelinePodsTemplates.
// All objects returned here must be treated as read-only.
type PipelinePodsTemplateNamespaceLister interface {
	// List lists all PipelinePodsTemplates in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*v1alpha1.PipelinePodsTemplate, err error)
	// Get retrieves the PipelinePodsTemplate from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*v1alpha1.PipelinePodsTemplate, error)
	PipelinePodsTemplateNamespaceListerExpansion
}

// pipelinePodsTemplateNamespaceLister implements the PipelinePodsTemplateNamespaceLister
// interface.
type pipelinePodsTemplateNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all PipelinePodsTemplates in the indexer for a given namespace.
func (s pipelinePodsTemplateNamespaceLister) List(selector labels.Selector) (ret []*v1alpha1.PipelinePodsTemplate, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1alpha1.PipelinePodsTemplate))
	})
	return ret, err
}

// Get retrieves the PipelinePodsTemplate from the indexer for a given namespace and name.
func (s pipelinePodsTemplateNamespaceLister) Get(name string) (*v1alpha1.PipelinePodsTemplate, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1alpha1.Resource("pipelinepodstemplate"), name)
	}
	return obj.(*v1alpha1.PipelinePodsTemplate), nil
}
